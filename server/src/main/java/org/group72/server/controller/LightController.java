package org.group72.server.controller;

import org.group72.server.dao.LightRepository;
import org.group72.server.model.LightNode;
import org.group72.server.model.Geometry;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;
import java.io.IOException;
import java.io.InputStream;
import java.util.List;
import com.fasterxml.jackson.core.type.TypeReference;
import com.fasterxml.jackson.databind.ObjectMapper;


/**
 * This class defines the API for handling CRUD requests
 * of Lights.
 */
@Controller
@RequestMapping(path="/light")
public class LightController {
    @Autowired // This means to get the bean called lightRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private LightRepository lightRepository;

    @PostMapping(path="/addLight") // Map ONLY POST Requests
    public @ResponseBody
    String addNewlight (@RequestParam Geometry geometry) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request

        LightNode l = new LightNode();
        l.setGeometry(geometry);
        lightRepository.save(l);
        return "Saved light";
    }

    @GetMapping(path="/allLights")
    public @ResponseBody Iterable<LightNode> getAllLights() {
        // This returns a JSON or XML with the users
        return lightRepository.findAll();
    }


    @PostMapping(path="/illuminate")
    public @ResponseBody String illuminate(){
		ObjectMapper mapper = new ObjectMapper();
		TypeReference<List<LightNode>> typeReference = new TypeReference<List<LightNode>>(){};
		InputStream inputStream = TypeReference.class.getResourceAsStream("C:/Users/Idaso/Documents/vitabergbelysning.json");
		try {
			List<LightNode> lights = mapper.readValue(inputStream,typeReference);
			lightRepository.saveAll(lights);
		} catch (IOException e){
			System.out.println("Unable to save users: " + e.getMessage());
		}
		return "Saved lights!";
    }
    
}